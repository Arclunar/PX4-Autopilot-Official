
name: Container build

on:
  push:
    branches:
      - 'main'
      - 'stable'
      - 'beta'
      - 'release/**'
    tags:
      - 'v*'
    paths:
      - 'Tools/setup/ubuntu.sh'
      - 'Tools/setup/requirements.txt'
      - 'Tools/setup/Dockerfile'
      - 'Tools/setup/docker-entrypoint.sh'
  pull_request:
    branches:
      - '*'
    paths:
      - 'Tools/setup/ubuntu.sh'
      - 'Tools/setup/requirements.txt'
      - 'Tools/setup/Dockerfile'
      - 'Tools/setup/docker-entrypoint.sh'

jobs:
  build:
    name: Build and Push Container
    strategy:
      matrix:
        platform:
          - arm64
          - x64
    runs-on: [runs-on,"runner=8cpu-linux-${{ matrix.platform }}","image=ubuntu24-full-${{ matrix.platform }}","run-id=${{ github.run_id }}",spot=false,extras=s3-cache]
    env:
      PLATFORM_NAME: ${{ matrix.platform == 'arm64' && 'linux/arm64' || 'linux/amd64' }}
    steps:
      - uses: runs-on/action@v1
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          submodules: false
          fetch-depth: 0

      - name: Set PX4 Tag Version
        id: px4_version
        run: |
          echo "px4_version=$(git describe --tags --match 'v[0-9]*')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/PX4/px4-dev
            px4io/px4-dev
          tags: |
            type=raw,enable=true,value=${{ steps.px4_version.outputs.px4_version }},priority=1000

      - name: Cache Apt Registry
        uses: runs-on/cache@v4
        id: cache
        with:
          path: |
            var-cache-apt
            var-lib-apt
          key: cache-${{ hashFiles('Tools/setup/Dockerfile') }}

      - name: Inject Cache into Docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.20.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: matrix.platform == 'x64'
        with:
          platforms: ${{ env.PLATFORM_NAME }}

      - name: Build and Load Container Image
        uses: docker/build-push-action@v6
        id: docker
        with:
          context: Tools/setup
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.PLATFORM_NAME }}
          load: true
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Get Container Image Tag Name
        id: image_name
        run: |
          echo "image_name=$(echo '${{ fromJSON(steps.docker.outputs.metadata)['image.name'] }}' | sed 's/,.*$//')" >> $GITHUB_OUTPUT

      - name: Test Build of PX4 with Container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ steps.image_name.outputs.image_name }}
          options: -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace
            git config --global --add safe.directory /workspace
            make px4_sitl_default
            make px4_fmu-v6x_default

  deploy:
    name: Deploy To Registry
    runs-on: [runs-on,"runner=8cpu-linux-x64","image=ubuntu24-full-x64","run-id=${{ github.run_id }}",spot=false,extras=s3-cache]
    needs: build
    # if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: runs-on/action@v1
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          submodules: false
          fetch-depth: 0

      - name: Set PX4 Tag Version
        id: px4_version
        run: |
          echo "px4_version=$(git describe --tags --match 'v[0-9]*')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/PX4/px4-dev
            px4io/px4-dev
          tags: |
            type=raw,enable=true,value=${{ steps.px4_version.outputs.px4_version }},priority=1000

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Apt Registry
        uses: runs-on/cache@v4
        id: cache
        with:
          path: |
            var-cache-apt
            var-lib-apt
          key: cache-${{ hashFiles('Tools/setup/Dockerfile') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Push Images to Registry
        uses: docker/build-push-action@v6
        with:
          context: Tools/setup
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          load: false
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
